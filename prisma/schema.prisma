generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  email           String            @unique
  phone           String
  birth           DateTime
  activePlan      Boolean           @default(false)
  refferralCode   String?           @default("")
  password        String
  isDeleted       Boolean           @default(false)
  expirationOtp   DateTime?
  otp             Int?
  role            UserRole          @default(USER)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  userInfo        UserInfo[]
  bodyMeasurement BodyMeasurement[]
  weightProgress  WeightProgress[]
  purchasedPlan   PurchasedPlan[]

  @@map("Users")
}

model UserInfo {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  fullName          String
  image             String?  @default("")
  age               Int
  gender            Gender
  weight            Float
  height            Float
  fitnessGoal       String
  dietaryPreference String
  isDeleted         Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  userId            String   @db.ObjectId
  user              User     @relation(fields: [userId], references: [id])

  @@map("User-Info")
}

model FitnessGoal {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("Fitness-Goal")
}

model BodyMeasurement {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  unit          Unit
  startingChest Int
  presentChest  Int
  startingWaist Int
  presentWaist  Int
  startingHips  Int
  presentHips   Int
  startingArms  Int
  presentArms   Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userId        String   @db.ObjectId
  user          User     @relation(fields: [userId], references: [id])

  @@map("Body-Measurement")
}

model WeightProgress {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  weight    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])

  @@map("Weight-Progress")
}

model Plan {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  duration      Int
  price         Float
  isDeleted     Boolean         @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  purchasedPlan PurchasedPlan[]
  planFeatured  PlanFeatured[]

  @@map("Plan")
}

model PlanFeatured {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  planId    String   @db.ObjectId
  plan      Plan     @relation(fields: [planId], references: [id])

  @@map("Plan-Featured")
}

model PurchasedPlan {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  paymentId  String
  amount     Float
  activePlan Boolean  @default(true)
  stratDate  DateTime @default(now())
  endDate    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     String   @db.ObjectId
  planId     String   @db.ObjectId
  User       User     @relation(fields: [userId], references: [id])
  plan       Plan     @relation(fields: [planId], references: [id])

  @@map("Purchased-Plan")
}

model Workout {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  icon        String   @default("")
  title       String
  thumbnail   String   @default("")
  video       String
  duration    String
  Kcal        Int
  fitnessGoal String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("Workout")
}

model Nutrition {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  icon           String          @default("")
  title          String
  mealTime       MealTime
  NutritionTips  String
  fitnessGoal    String?         @default("")
  document       String?         @default("")
  video          String?         @default("")
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  nutritionItems NutritionItem[]

  @@map("Nutrition")
}

model NutritionItem {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  images      String
  quantity    String
  Kcal        Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  nutritionId String    @db.ObjectId
  nutrition   Nutrition @relation(fields: [nutritionId], references: [id])

  @@map("Nutrition-Item")
}

enum UserRole {
  ADMIN
  USER
}

enum Gender {
  MALE
  FEMALE
}

enum Unit {
  CM
  IN
  KG
  LB
}

enum MealTime {
  BREAKFAST
  LUNCH
  DINNER
  SNACK
}
